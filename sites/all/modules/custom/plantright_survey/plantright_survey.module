<?php

/**
 * Contains customizations for the spring survey.
 * (Survey user profile customizations are in the Plantright module.)
 */
//todo: redirect from /spring-nursery-survey-submission

/**
 * Implementation of hook_init.
 */
function plantright_survey_init() {
  drupal_add_js(drupal_get_path('module', 'plantright_survey') . '/js/plantright_survey.js');
}

/**
 * Implementation of hook_flag().
 */
function plantright_survey_flag($action, $flag, $content_id, $account) {
  if ($action == 'flag' && $flag->name == 'nursery_flag') {
    $node = node_load($content_id);
    //dpm($node->field_surveying_user);
    $member = array();
    $member['uid'] = $account->uid;
    array_push($node->field_surveying_user, $member);
    //dpm($node->field_surveying_user);
    node_save($node);
  }
  if ($action == 'unflag' && $flag->name == 'nursery_flag') {
    $node = node_load($content_id);
    $users = $node->field_surveying_user;
    $node->field_surveying_user = _plantright_survey_removeElementWithValue($users, "uid", $account->uid);
    node_save($node);
  }
}

function _plantright_survey_removeElementWithValue($array, $key, $value) {
  foreach ($array as $subKey => $subArray) {
    if ($subArray[$key] == $value) {
      unset($array[$subKey]);
    }
  }
  return $array;
}

/**
 * Implementation of hook_field_access().
 *
 * @param $op
 *   The operation to be performed. Possible values:
 *   - 'edit'
 *   - 'view'
 * @param $field
 *   The field on which the operation is to be performed.
 * @param $account
 *   The account to check.
 *   Note that this argument is optional to content_access(), but it is
 *   always passed to hook_field_access(), with current user if not supplied.
 *   This is an argument that was added to CCK in 6.x-2.2 release.
 * @param $node
 *   (optional) The node on which the operation is to be performed.
 *   Note that this argument is optional to content_access(), but it is
 *   always passed to hook_field_access(), with NULL if not supplied.
 *   This is an argument that was added to CCK in 6.x-2.5 release.
 *
 * @return
 *   FALSE if the operation is not allowed.
 *   Note when content_access() is invoked, access is granted unless one
 *   implementation of hook_field_access() explicitly returns FALSE.
 *
 * @see content_access()
 */
function plantright_survey_field_access($op, $field, $account, $node) {
  switch ($field['field_name']) {
    case 'field_store_type':
    case 'field_region':
      switch ($op) {
        case 'view':
          // Deny access to view these fields to users who don't have administer
          // nodes permission.
          if (!user_access('administer nodes', $account)) {
            return false;
          }
          break;
      }
      break;
  }
}

/**
 * Implementation of hook_form_alter.
 */
function plantright_survey_form_alter(&$form, &$form_state, $form_id) {
  global $user;
  switch ($form_id) {
    case 'survey_photos_node_form':
      $form['buttons']['submit']['#submit'][] = 'plantright_survey_survey_photos_node_form_submit';
      $form['buttons']['submit']['#value'] = t('Submit');
      break;
    case 'survey_submission_node_form':
      $form['buttons']['submit']['#value'] = t('Submit');
      $form['#after_build'][] = 'plantright_survey_survey_submission_node_form_after_build';

      // Populate default value for email and name.
      $form['field_survey_email'][0]['#default_value']['email'] = $user->mail;
      $form['field_survey_name'][0]['#default_value']['value'] = plantright_get_user_profile_name($user);
      break;
    case 'nursery_node_form':
      $form['#after_build'][] = 'plantright_survey_nursery_node_form_after_build';
      break;
    case 'survey_profile_node_form':
      $form['field_county_1']['#after_build'][] = 'plantright_survey_survey_profile_node_form_after_build';
      break;
  }
}

/**
 * Custom submit handler for survey photos form.
 */
function plantright_survey_survey_photos_node_form_submit(&$form, &$form_state) {
  if (empty($form_state['values']['nid'])) {
    // New submission.
    $key = null;
    foreach ($_SESSION['messages']['status'] as $status_key => $status) {
      if (strpos($status, 'has been created')) {
        $key = $status_key;
      }
    }

    if ($key !== null) {
      $_SESSION['messages']['status'][$key] = t('Congratulations, you have successfully submitted your photos. Please check over them below. If you want to submit more photos for this nursery, please go to <a href="/node/add/survey-photos">Upload Photos</a>.');
    }

    // Redirect to the nursery node.
    $nursery_id = $form_state['values']['field_store_name'][0]['nid'];
    $form['#redirect'] = 'node/' . $nursery_id;
  }
}

/**
 * Alter survey submission form after build.
 */
function plantright_survey_survey_submission_node_form_after_build($form, &$form_state) {
  // Set labels on survey date fields.
  $form_date = &$form['group_survey_basic']['field_survey_date'][0]['value'];
  _plantright_addEmptyOption($form_date['month']['#options'], t('Month'));
  _plantright_addEmptyOption($form_date['day']['#options'], t('Day'));
  _plantright_addEmptyOption($form_date['year']['#options'], t('Year'));

  // Move the title (store code) into the basic info group.
  $form['title']['#weight'] = $form['group_survey_basic']['field_store_name']['#weight'] + 1;
  $form['group_survey_basic']['field_survey_name']['#weight'] = $form['group_survey_basic']['field_survey_name']['#weight'] + 1;
  $form['group_survey_basic']['field_survey_email']['#weight'] = $form['group_survey_basic']['field_survey_email']['#weight'] + 1;
  $form['group_survey_basic']['title'] = $form['title'];
  unset($form['title']);

  // Add text to the top of the basic info area.
  $form['group_survey_basic']['help_text'] = array(
    '#value' => "<div class=\"description\"><p>Thank you for participating in PlantRight's 2013 Spring Nursery Survey. This form contains PlantRight's list of 19 horticultural invasive plants and is organized by growth form. Please identify plants using their scientific names. Thank you!</p>
      <p>If there are any invasive species at the nursery you surveyed, please email the photos to <a href=\"mailto:plantright@suscon.org\">plantright@suscon.org</a>. Name each photo using the store code, your last name, the plant name and whether it is of the plant or tag (eg. Monterey2013-01, Smith, pampas grass, plant tag)</p></div>",
  );

  // Change the time wrapper from fieldset to item, add clearfix wrapper,
  // add labels to the empty select options, change am/pm select to radios.
  $form['group_additional']['field_survey_start_time'][0]['#type'] = 'item';
  $form['group_additional']['field_survey_start_time']['#prefix'] = '<div class="clearfix">';
  $form['group_additional']['field_survey_start_time']['#suffix'] = '</div>';
  $form['group_additional']['field_survey_start_time'][0]['hour']['#options'][''] = t('hour');
  $form['group_additional']['field_survey_start_time'][0]['minute']['#options'][''] = t('minute');

  $form['group_additional']['field_survey_end_time'][0]['#type'] = 'item';
  $form['group_additional']['field_survey_end_time']['#prefix'] = '<div class="clearfix">';
  $form['group_additional']['field_survey_end_time']['#suffix'] = '</div>';
  $form['group_additional']['field_survey_end_time'][0]['hour']['#options'][''] = t('hour');
  $form['group_additional']['field_survey_end_time'][0]['minute']['#options'][''] = t('minute');

  return $form;
}

/**
 * Alter nursery form after build.
 */
function plantright_survey_nursery_node_form_after_build($form, &$form_state) {
  _plantright_addEmptyOption($form['field_store_type']['value']['#options']);
  _plantright_addEmptyOption($form['field_region']['value']['#options']);
  _plantright_addEmptyOption($form['field_county']['value']['#options']);
  return $form;
}

/**
 * Alter nursery user profile form field county.
 */
function plantright_survey_survey_profile_node_form_after_build($form, &$form_state) {
  _plantright_addEmptyOption($form['value']['#options']);
  return $form;
}

